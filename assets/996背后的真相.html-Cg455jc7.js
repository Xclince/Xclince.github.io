import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e,f as r,o as n}from"./app-CPWr7TG8.js";const s={};function p(a,t){return n(),e("div",null,t[0]||(t[0]=[r('<blockquote><p>  我作为软件质量保障领域的从业者，经手过多个互联网与传统行业项目后，我对两种模式的开发流程差异有深刻体会。从测试工程视角来看，互联网企业高频迭代模式与传统行业瀑布式开发在需求验证机制上的本质差异，直接导致了开发团队截然不同的工作负荷分布。</p></blockquote><blockquote><p>  我曾目睹两种模式下程序员截然不同的生存状态：一边是凌晨三点的会议室里，程序员为&quot;用户可能喜欢的&quot;虚拟宠物功能争论交互逻辑；另一边是银行网点中，开发团队拿着毫米级精度的操作时长报表，优化已经跑通十年的存取款流程。这种撕裂本质上是两种试错逻辑的对抗——<strong>前者用代码验证想象，后者用代码固化经验</strong>。</p></blockquote><p>或许你会困惑：这样的开发模式差异，在实际操作中究竟如何体现？我通过下方几段提问揭示答案：</p><blockquote><p><strong>问</strong>：听说互联网公司程序员总加班，传统企业好像好点？这两边开发流程到底有啥本质区别啊？</p><p><strong>答</strong>：​这事儿其实和“需求怎么来的”直接相关。打个比方吧，互联网公司像在游乐场试各种新项目——假设你是产品经理，突然觉得“如果给用户加个捏脸功能肯定爆火”，程序员就得连夜搭过山车。结果开放三天发现没人玩，拆了改碰碰车，过两周又换成旋转木马...试错成本全在搭设施的“师傅”身上。</p></blockquote><blockquote><p><strong>问</strong>：​ 那传统公司呢？他们需求哪来的？<br><strong>答</strong>：​ 更像老字号的裁缝铺。业务员天天在街上量客人体型，发现十个客人九个腰围变粗，回来跟裁缝说：“现在得把裤子腰头放宽两寸，用弹性布料”。裁缝按这个改，改完客人穿着舒服，店铺口碑越来越好。就算要试新款唐装，也是先给老客户免费试穿三个月才量产。</p></blockquote><blockquote><p><strong>问</strong>：​ 这么说互联网公司需求都是拍脑袋？<br><strong>答</strong>：​ 也不绝对，但确实常见“造浪式创新”。去年了解过一个社交APP的“情绪滤镜”项目，产品总监看TikTok数据突发奇想，要求二十天上线测试。结果程序员调色温调到头秃，测试组连夜测了200款机型，上线后发现用户更爱用的居然是误操作触发的“鬼脸模式”。</p></blockquote><blockquote><p><strong>问</strong>：​ 那传统企业开发就很轻松？<br><strong>答</strong>：​ 倒也不是。去年帮银行升级取款机系统，业务部拿着五年间的286起客户投诉清单，精确到“78岁老人总按错确认键”。我们给界面加防呆设计时，真去养老院找了20位老人实测了八轮。虽然前期调研三个月，但上线后相关投诉直接清零。</p></blockquote><blockquote><p><strong>问</strong>：​ 大公司砸钱试错那套怎么说？<br><strong>答</strong>：​ 就像开赌石厂。某大厂同时启动五个创新项目，可能四个切开来是废料，但只要有个项目切出翡翠，立刻调集所有雕刻师傅精加工。去年他们有个语音社交项目差点被砍，结果意外发现中学生拿它当线上自习室，现在转型成教育产品反而成了黑马。</p></blockquote><blockquote><p><strong>问</strong>：​ 普通人创业该学哪边？<br><strong>答</strong>：​ 建议学煎饼摊老板。先在校门口卖三天原味煎饼，发现学生爱加辣就备辣酱，白领要快就做预包装。等每天稳定卖200个了，再研发芝士榴莲味。千万别学某些创业者，店还没开就研发28种宇宙风味，最后炉子都没烧热就凉了。</p></blockquote><div style="float:right;text-align:right;"><sub>上次编辑于: <span style="color:rgba(60, 60, 67, 0.78);">2024/6/27 22:40:49</span></sub><br><sub>贡献者: <span style="color:rgba(60, 60, 67, 0.78);">吴鑫程</span></sub></div>',10)]))}const i=o(s,[["render",p],["__file","996背后的真相.html.vue"]]),g=JSON.parse('{"path":"/posts/996%E8%83%8C%E5%90%8E%E7%9A%84%E7%9C%9F%E7%9B%B8.html","title":"互联网VS传统行业：程序员996背后的真相","lang":"zh-CN","frontmatter":{"title":"互联网VS传统行业：程序员996背后的真相","order":1,"author":"吴鑫程","date":"2020-01-01T00:00:00.000Z","star":true,"editLink":false,"contributors":false,"lastUpdated":false,"copy":false,"description":"我作为软件质量保障领域的从业者，经手过多个互联网与传统行业项目后，我对两种模式的开发流程差异有深刻体会。从测试工程视角来看，互联网企业高频迭代模式与传统行业瀑布式开发在需求验证机制上的本质差异，直接导致了开发团队截然不同的工作负荷分布。 我曾目睹两种模式下程序员截然不同的生存状态：一边是凌晨三点的会议室里，程序员为\\"用户可能喜欢的\\"虚拟宠物功能争论交互...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/996%E8%83%8C%E5%90%8E%E7%9A%84%E7%9C%9F%E7%9B%B8.html"}],["meta",{"property":"og:site_name","content":"吴鑫程的博客"}],["meta",{"property":"og:title","content":"互联网VS传统行业：程序员996背后的真相"}],["meta",{"property":"og:description","content":"我作为软件质量保障领域的从业者，经手过多个互联网与传统行业项目后，我对两种模式的开发流程差异有深刻体会。从测试工程视角来看，互联网企业高频迭代模式与传统行业瀑布式开发在需求验证机制上的本质差异，直接导致了开发团队截然不同的工作负荷分布。 我曾目睹两种模式下程序员截然不同的生存状态：一边是凌晨三点的会议室里，程序员为\\"用户可能喜欢的\\"虚拟宠物功能争论交互..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-13T07:59:33.000Z"}],["meta",{"property":"article:author","content":"吴鑫程"}],["meta",{"property":"article:published_time","content":"2020-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-13T07:59:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"互联网VS传统行业：程序员996背后的真相\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-13T07:59:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"吴鑫程\\"}]}"]]},"git":{"createdTime":1741767367000,"updatedTime":1741852773000},"readingTime":{"minutes":3.62,"words":1086},"filePathRelative":"posts/996背后的真相.md","localizedDate":"2020年1月1日","excerpt":"<blockquote>\\n<p>  我作为软件质量保障领域的从业者，经手过多个互联网与传统行业项目后，我对两种模式的开发流程差异有深刻体会。从测试工程视角来看，互联网企业高频迭代模式与传统行业瀑布式开发在需求验证机制上的本质差异，直接导致了开发团队截然不同的工作负荷分布。</p>\\n</blockquote>\\n<blockquote>\\n<p>  我曾目睹两种模式下程序员截然不同的生存状态：一边是凌晨三点的会议室里，程序员为\\"用户可能喜欢的\\"虚拟宠物功能争论交互逻辑；另一边是银行网点中，开发团队拿着毫米级精度的操作时长报表，优化已经跑通十年的存取款流程。这种撕裂本质上是两种试错逻辑的对抗——<strong>前者用代码验证想象，后者用代码固化经验</strong>。</p>\\n</blockquote>","autoDesc":true}');export{i as comp,g as data};
